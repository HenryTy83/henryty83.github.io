//////// TJSVMTDHAA: The Javascript Virtual Machine That Doesn't Have An Acronym
By Henry Ty, XX November 2022
//////// Hardware specs:

//// 16-bit big endian Von Neumann architecture processor
registers:
    PC: program counter*
    SP: stack pointer*
    MB: memory bank controller*
    CLK: clock speed controller
    accumulator
    x, y, d: general purpose registers
    
    *accessed by hardware only

65536 ($ffff + 1) unique addresses (not including bank-switching)
Memory Mapped I/O

//// Memory Mapping:
$0000-$ffff: useable memory

$0000-$7fff: RAM (Programs and temporary data)
$7fee-$7ffd: interrupt vector addresses (each bit in the interrupt register corresponds to a byte, which is jumped to on the interrupt)
$7ffe: Reset vector: On startup, execution will begin at whatever address is stored here
< $7fee: stack
$8000-$afff: Peripherals 
    $8000-$8750: screen display
        screen is indexed starting in the upper left corner at $8001. Addresses increase by one going right. 
        After the right edge, numbering continues on the left side of the next line
        Each byte corresponds to a character 

        $8000 is not used for display, but used to set the control hextet
        control: the first four bits set control flags, the next 12 are the color: 0bABCDRRRRGGGGBBBB
            A: clear screen
            B: italic text
            C: bold text

            D: UNUSED

            R: red channel (4 bit number)
            G: green channel (4 bit number)
            B: blue channel (4 bit number)
        Settings persist until overwritten or cleared
        
        After setting the control hextet, write to the screen by writing any 16-bit unicode value to the corresponding memory address
